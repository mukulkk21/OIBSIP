

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
# Load the dataset
data = pd.read_csv("Advertising.csv")

# Explore the first few rows of the data
print(data.head())

# Explore the shape of the data (rows, columns)
print(data.shape)

# Check for missing values
print(data.isnull().sum())
# Separate the features (advertising expenses) and the target variable (sales)
X = data[['Ad_Expense']]
y = data['Sales']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
# Initialize the Linear Regression model
model = LinearRegression()

# Train the model on the training data
model.fit(X_train, y_train)
# Make predictions on the test set
y_pred = model.predict(X_test)

# Calculate evaluation metrics
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error (MSE):", mse)
print("R-squared score:", r2)
# Plot the actual sales vs. predicted sales
plt.scatter(X_test, y_test, color='blue', label='Actual Sales')
plt.plot(X_test, y_pred, color='red', linewidth=2, label='Predicted Sales')
plt.xlabel('Advertising Expense')
plt.ylabel('Sales')
plt.legend()
plt.title('Sales Prediction')
plt.show()
